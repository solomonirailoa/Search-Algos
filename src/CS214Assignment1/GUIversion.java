package CS214Assignment1;

import java.util.*;
import javax.swing.*;
import javax.swing.filechooser.FileNameExtensionFilter;

import java.io.*;

/**
 *  
 *  CS214 Assignment1 2021Sem2
 * @author Ratu Solomoni Railoa - s11123197@student.usp.ac.fj
 *         Sireli Savutila  (s11086287@student.usp.ac.fj)
 * 
 * 
 */
public class GUIversion extends javax.swing.JFrame {
	private static final long serialVersionUID = 1L;
	public ArrayList<ArrayList<String>> arrayList = new ArrayList<ArrayList<String>>(); //Main 2D Array List. CSV file elements are stored here here.
    public LinkedList<LinkedList<String>> linkedList = new LinkedList<LinkedList<String>>(); //Main 2D Linked List. CSV file elements are stored here here.
    public Hashtable<String,ArrayList<String>> hashTable = new Hashtable<String,ArrayList<String>>(); //Main HashTable, emulating a 2D Collection. CSV file elements are stored here here.
    
    public String path; //FilePath of CSV file
    public int cols; //How many columns are in the CSV file
    public int rows; //How many rows are in the CSV file
    public String keyName; //The name/type of Search key, eg. studentID, StructureID, employeeID, citizenID, etc
    public boolean openCSVagain;
    public String tempColHeading="";
    
    public int rann; //First index of 10% array, generated by Math.Random();
    public int endrann; //Final or ending index of 10% array
    public String[] tenPercc; //The 10% array
    public String[] headers; //Column headings, titles
    
    //Binary Search helper codes below
	    	//The code below retains the original order of the CSV file. The original/unsorted lists are stored here.
	    		public ArrayList<String> keyArrayList = new ArrayList<>(); //Used for binary search only , since Built-in binarySearch method doesn't support 2D collections
	    		public LinkedList<String> keyLinkedList = new LinkedList<>(); //Used for binary search only, since Built-in binarySearch method doesn't support 2D collections
	    	//The code above retains the original order of the CSV file. The original/unsorted lists are stored here.
	    
	    	//The code below is used for sorting of the ID's. The sorted lists are stored here
	    		public ArrayList<String> temporarySortedArrLstIdsonly= new ArrayList<String>(); //Sort by ID's only
	    		public ArrayList<ArrayList<String>> temporarySortedArrLstFull2D= new ArrayList<ArrayList<String>>(); //For printing the correct search result
	    		public LinkedList<String> temporarySortedLinkLstIdsonly= new LinkedList<String>(); //Sort by ID's only
	    		public LinkedList<LinkedList<String>> temporarySortedLinkLstFull2D= new LinkedList<LinkedList<String>>(); //For printing the correct search result
	   		//The code above is used for sorting of the ID's. The sorted lists are stored here
    //Binary Search helper codes above
	    		
    TenPercArrayListBinary taskTenPercArrayListBinary; //Perform 10% Binary search on Array List
    class TenPercArrayListBinary extends SwingWorker<Void,Void>{ //Binary 10% search Array List 
        public double s;					//Binary 10% search ArrayList
        public long d;							// 10% Binary search ArrayList 
        public Void doInBackground(){
            jProgressBar6.setIndeterminate(true);
            jLabel34.setText("Loading, please wait for ArrayList Binary Search");
            jLabel35.setText(" ");
            jLabel36.setText(" ");    
            jLabel51.setText(" ");
            long startTime = System.nanoTime(); //Search timer starts
            for (int ij = 0; ij<tenPercc.length; ij++){
                String search = tenPercc[ij];
                Comparator<String> c = new Comparator<String>() {
                    @Override
                    public int compare(String p1, String p2)
                    {
                        return p1.compareTo(p2);
                    } //This comparator is a help class for the buit-in Java Binary search
                }; //Must! Binary Search can only be performed on sorted collections
                
                int indx = Collections.binarySearch(temporarySortedArrLstIdsonly, search,c); //<----This is the actual BUILT-in binary search for ArrayList
                if (indx > -1){
                    //Found
                }
                else if (indx <= -1){
                    //Not found  
                } 
            }
            long endTime = System.nanoTime(); //Stop the search timer
            long duration = (endTime - startTime); d=duration;//Calculate search time
            double sec = duration/1000000000.0; s=sec; //Search time in seconds
            return null;
        }
        
        public void done(){
           jProgressBar6.setIndeterminate(false);   
            jLabel34.setText("Done. ArrayList 10% Binary Search Complete");
            jLabel35.setText("Search time: ");
            jLabel36.setText(d + " microseconds");
            if (s > 0.000001){
                jLabel51.setText("or " + String.format("%.7f", s) + " seconds");
            } 
            else {
            	jLabel51.setText(" ");
            }
        }
    }
    
    TenPercArrayListSeq taskTenPercArrayListSeq; //Perform 10% Sequential search on ArrayList 
    class TenPercArrayListSeq extends SwingWorker<Void,Void>{ //Random ArrayList Sequential Search
        public double s;	//Random Sequential Search Array List
        public long d;		//Random Array List 10% sequential search
        public Void doInBackground(){
            jProgressBar5.setIndeterminate(true);   
            jLabel37.setText("Loading, please wait for ArrayList 10% Sequential Search");
            jLabel38.setText(" ");
            jLabel39.setText(" ");
            jLabel53.setText(" ");
            long startTime = System.nanoTime(); //Search timer STARTS
            double sec = 0; long duration =0;
            for (int ij = 0; ij<tenPercc.length; ij++){
                String search = tenPercc[ij];
                int statusFound = 0; int i= 0;
		while(i < rows && statusFound==0){
                    if ((arrayList.get(i).get(0)).equals(search)){
                        statusFound = 1; //if FOUND element, then STOP search
                    }
                    ++i;
                }
                if (statusFound == 1){
                    //Found
                }
                else if (statusFound == 0){
                    //Not found
                }
            }
            long endTime = System.nanoTime(); //Search timer STOPS
            duration = (endTime - startTime); d=duration; //Calculate search time
            sec = duration/1000000000.0; s=sec;
            return null;
        }
        public void done(){
            jProgressBar5.setIndeterminate(false);   
            jLabel37.setText("Done. ArrayList 10% Sequential Search Complete");
            jLabel38.setText("Search time: ");
            jLabel39.setText(d + " microseconds");
            if (s > 0.000001){
                jLabel53.setText("or " + String.format("%.7f", s) + " seconds");
            }
            else {
            	jLabel53.setText(" ");
            }
        }
    }

    TenPercLinkedListBinary taskTenPercLinkedListBinary; //Perform 10% Binary Search on LinkedList
    class TenPercLinkedListBinary extends SwingWorker<Void,Void>{ //Binary Search 10% LinkedList
        public double s;		//Binary 10% search Linked List
        public long d;			// Binary Search LinkedList 	 Binary Search Linked List
        public Void doInBackground(){				//Random Linked List Binary Search
            jProgressBar4.setIndeterminate(true);  //Random Binary Search Linked List
            jLabel28.setText("Loading, please wait for LinkedList 10% Binary Search");
            jLabel29.setText(" ");
            jLabel30.setText(" ");
            jLabel54.setText(" ");
            long startTime = System.nanoTime(); //Search timer starts
            for (int ij = 0; ij<tenPercc.length; ij++){
                String search = tenPercc[ij];
                Comparator<String> c = new Comparator<String>() {
                    @Override
                    public int compare(String p1, String p2)
                    {
                        return p1.compareTo(p2);
                    } //This comparator is a help class for the buit-in Java Binary search
                }; //Must! Binary Search can only be performed on sorted collections
                
                
                int indx = Collections.binarySearch(temporarySortedLinkLstIdsonly, search,c); //<----This is the actual BUILT-in binary search for ArrayList
                if (indx > -1){
                    //Found
                }
                else if (indx <= -1){
                    //Not found  
                } 
            }
            long endTime = System.nanoTime(); //Stop the search timer
            long duration = (endTime - startTime); d=duration;//Calculate search time
            double sec = duration/1000000000.0; s=sec; //Search time in seconds
            return null;
        }
        
        public void done(){
            jProgressBar4.setIndeterminate(false);   
            jLabel28.setText("Done. LinkedList 10% Binary Search Complete");
            jLabel29.setText("Search time: ");
            jLabel30.setText(d + " microseconds");
            if (s > 0.000001){
                jLabel54.setText("or " + String.format("%.7f", s) + " seconds");
            }
            else {
            	jLabel54.setText(" ");
            }
            
        }  
    }
    
    TenPercLinkedListSeq taskTenPercLinkedListSeq; //Perform 10% Sequential Search on LinkedList
    class TenPercLinkedListSeq extends SwingWorker<Void,Void>{ //10% LinkedList Sequential Search 10%
        public double s;				
        public double d;
        
        public Void doInBackground(){
            jProgressBar7.setIndeterminate(true);   
            jLabel40.setText("Loading, please wait for LinkedList 10% Sequential Search");
            jLabel41.setText(" ");
            jLabel42.setText(" This might take very long!");
            jLabel52.setText(" ");
            long startTime = System.nanoTime(); //Search timer STARTS
            double sec = 0; long duration =0;
            for (int ij = 0; ij<tenPercc.length; ij++){
                String search = tenPercc[ij];
                int statusFound = 0; int i= 0; 
		while(i < rows && statusFound==0){
                    if ((linkedList.get(i).get(0)).equals(search)){
                        statusFound = 1; //if FOUND element, then STOP search
                    }
                    ++i;
                }
                if (statusFound == 1){
                    //Found
                }
                else if (statusFound == 0){
                    //Not found
                }
                
            }
            long endTime = System.nanoTime(); //Search timer STOPS
            duration = (endTime - startTime); d=duration; //Calculate search time
            sec = duration/1000000000.0; s=sec;
            
            return null;
        }
        
        public void done(){
            jProgressBar7.setIndeterminate(false);   
            jLabel40.setText("Done. LinkedList 10% Sequential Search Complete");
            jLabel41.setText("Search time: ");
            jLabel42.setText(d + " microseconds");
            if (s > 0.0000001){
                jLabel52.setText("or " + String.format("%.7f", s) + " seconds");
            }
            else {
            	jLabel52.setText(" ");
            }
        }   
    }
    
    TenPercHashTableSearch taskTenPercHashTableSearch; //Perform 10% Search on HashTable
    class TenPercHashTableSearch extends SwingWorker<Void,Void>{ //Hashtable 10% search
        public long d;						//HashTable search
        public double s;					//Search HashTable
        
        public Void doInBackground(){
            jProgressBar3.setIndeterminate(true);
            jLabel31.setText("Loading. Please wait for HashTable 10% Search");
            jLabel32.setText(" ");
            jLabel33.setText(" ");
            jLabel50.setText(" ");
            long startTime = System.nanoTime(); //Search timer STARTS
            double sec = 0; long duration =0;
            for (int w=0; w<tenPercc.length;w++){
                String search = tenPercc[w];
                if(hashTable.containsKey(search)){ // The containsKey() method is the built-in SEARCH method/algorithm for HashTable/Hashmap
                    //Found   
                }
                else{
                    //Not found
                }
            }    
            long endTime = System.nanoTime(); //Search timer STOPS
            duration = (endTime - startTime); d=duration; //Calculate search time
            sec = duration/1000000000.0; s=sec;
            return null;
        }
        
        public void done(){
            jProgressBar3.setIndeterminate(false);   
            jLabel31.setText("Done. HashTable 10% Search Complete");
            jLabel32.setText("Search time: ");
            jLabel33.setText(d + " microseconds");
            if (s > 0.000001){
                jLabel50.setText("or " + String.format("%.7f", s) + " seconds");
            }
            else {
            	jLabel50.setText(" ");
            }
        }
    }
    
    HashTableSearch taskHashTableSearch; //Perform single search on HashTable
    class HashTableSearch extends SwingWorker<Void,Void>{ //HashTable Search
        public Void doInBackground(){    //Hash search , search hash , search hashtable
        String search = jTextField5.getText();
        double sec = 0; long duration =0;
        long startTime = System.nanoTime(); //Search timer STARTS
        if(hashTable.containsKey(search)){ // The containsKey() method is the built-in SEARCH method/algorithm for HashTable
            //Found
            long endTime = System.nanoTime(); //Search timer STOPS
            duration = (endTime - startTime); //Calculate search time
            sec = duration/1000000000.0;
            jList10 = new javax.swing.JList<>();
            ArrayList<String> strings = new ArrayList<>(); //This is a GUI component, not a search component
            strings.add("Found");
            strings.add("");
            String st = "";
            for (int g =0;g<cols;g++){
                if((hashTable.get(search).get(g)).equals("")){
                    st += "  ____  ";
                }
                st  +=  hashTable.get(search).get(g) + " | ";
            }
            strings.add(st);
            strings.add("");
            strings.add("-------------------");
            strings.add("Record details");
            strings.add("-------------------");
            int inxs=0;
            for (int inz = 0; inz<cols;inz++ ){
                String emp = "";
                if ((hashTable.get(search).get(inxs)).equals("")){
                    emp = " ____ ";
                }
                String ss = headers[inxs] + ": " + hashTable.get(search).get(inxs) + emp;
                strings.add(ss);
                ++inxs;
            }
            strings.add("-------------------");
            strings.add("Search time: " + duration + "microseconds");
            if (sec>0){
                strings.add("------------------- or " + sec +" seconds");
            }
            jList10.setModel(new javax.swing.AbstractListModel<String>() {
                /**
				 * 
				 */
				private static final long serialVersionUID = 1L;
				public int getSize() { return strings.size(); }
                public String getElementAt(int i) { return strings.get(i); }
            });
            jScrollPane10.setViewportView(jList10);
        }
        else{
            //Not found
            long endTime = System.nanoTime(); //Search timer STOPS
            long durationn = (endTime - startTime); //Calculate search time
            sec = (int)duration/1000000000;
            //Not found
            jList10 = new javax.swing.JList<>();
            jList10.setModel(new javax.swing.AbstractListModel<String>() {
                /**
				 * 
				 */
				private static final long serialVersionUID = 1L;
				String[] strings = { "Not found", "-----", "Search time: "+ durationn};
                public int getSize() { return strings.length; }
                public String getElementAt(int i) { return strings[i]; }
            });
            jScrollPane10.setViewportView(jList10);  
        }   
        jLabel46.setText("Search time: ");
        jLabel47.setText(duration + " microseconds");
        if (sec > 0.000001){
            jLabel48.setText("or " + String.format("%.7f", sec) + " seconds");
        }
        else {
        	jLabel48.setText("or " + sec + " seconds");
        }
        return null;
        }
        
        public void done(){
           
            
        }
    }
    
    ArrayListBinary taskArrayListBinary; //Perform single search on ArrayList using Built-in Binary Search method
    class ArrayListBinary extends SwingWorker<Void,Void>{ //Array List Binary Search
        public Void doInBackground(){ //ArrayList binary search
            String search = jTextField3.getText(); //Binary search ArrayList
            Comparator<String> c = new Comparator<String>() {
                @Override
                public int compare(String p1, String p2)
                {
                    return p1.compareTo(p2);
                } //This comparator is a help class for the buit-in Java Binary search
            }; //Must! Binary Search can only be performed on sorted collections
            long startTime = System.nanoTime(); //Search timer starts here
            int indx = Collections.binarySearch(temporarySortedArrLstIdsonly, search,c); //<----This is the actual BUILT-in binary search for ArrayList
            long endTime = System.nanoTime(); //Stop the search timer
            long duration = (endTime - startTime);//Calculate search time in microseconds
            double sec = duration/1000000000; //Produce the search time in seconds 
            if (indx > -1){
                //Found
                int foundAt = indx; //The element was found at the index "indx";
                jList3 = new javax.swing.JList<>();
                ArrayList<String> strings = new ArrayList<>();
                strings.add("Found");
                strings.add("");
                String st = "";
                for (int g =0;g<cols;g++){
                    if((temporarySortedArrLstFull2D.get(foundAt).get(g)).equals("")){
                        st += "  ____  ";
                    } 	
                    st  +=  temporarySortedArrLstFull2D.get(foundAt).get(g) + " | ";
                }
                strings.add(st);
                strings.add("");
                strings.add("-------------------");
                strings.add("Record details");
                strings.add("-------------------");
                int inxs=0;
                for (int inz = 0; inz<cols;inz++ ){
                    String emp = "";
                    if ((temporarySortedArrLstFull2D.get(foundAt).get(inxs)).equals("")){
                        emp = " ____ ";
                    }
                    String ss = headers[inxs] + ": " + temporarySortedArrLstFull2D.get(foundAt).get(inxs) + emp;
                    strings.add(ss);
                    ++inxs;
                }
                strings.add("-------------------");
                strings.add("Search time: " + duration + "microseconds");
                if (sec>0){
                    strings.add("------------------- or " + sec +" seconds");
                }

                jList3.setModel(new javax.swing.AbstractListModel<String>() {
                    /**
					 * 
					 */
					private static final long serialVersionUID = 1L;
					public int getSize() { return strings.size(); }
                    public String getElementAt(int i) { return strings.get(i); }
                });
                jScrollPane3.setViewportView(jList3);

                }
                else if (indx <= -1){
                    //Not found
                    jList3 = new javax.swing.JList<>();
                    jList3.setModel(new javax.swing.AbstractListModel<String>() {
                        /**
						 * 
						 */
						private static final long serialVersionUID = 1L;
						String[] strings = { "Not found", "-----", "Search time: "+duration};
                        public int getSize() { return strings.length; }
                        public String getElementAt(int i) { return strings[i]; }
                    });
                    jScrollPane3.setViewportView(jList3);   
                }
                jLabel25.setText("Search time: ");
                jLabel26.setText(duration + " microseconds");
                if (sec > 0.000001){
                    jLabel27.setText("or " + sec + " seconds");
                }
                else {
                	jLabel27.setText(" ");
                }
            return null;
        }
        
        public void done(){
           
            
        }
    }
    
    LinkedListBinary taskLinkedListBinary; //Perform a Single search on LinkedList using built-in Binary Search method
    class LinkedListBinary extends SwingWorker<Void,Void>{ //LinkedList binary search
        public Void doInBackground(){ //Binary search linkedList
            jProgressBar8.setIndeterminate(true); //Binary search linked List
            jLabel49.setText("Searching, please wait."); //Linked List binary search
            String search = jTextField4.getText();
            Comparator<String> c = new Comparator<String>() {
                @Override
                public int compare(String p1, String p2)
                {
                    return p1.compareTo(p2);
                } //This comparator is a help class for the buit-in Java Binary search
            }; //Must! Binary Search can only be performed on sorted collections
            long startTime = System.nanoTime(); //Search timer starts
            int indx = Collections.binarySearch(temporarySortedLinkLstIdsonly, search,c); //<----This is the actual BUILT-in binary search for ArrayList
            long endTime = System.nanoTime(); //Stop the search timer in microseconds
            long duration = (endTime - startTime);//Calculate search time
            double sec = duration/1000000000; //Produce the  search time into seconds   
            if (indx > -1){
                //Found
                int foundAt = indx; //The element was found at index "indx"
                jList4 = new javax.swing.JList<>();
                LinkedList<String> strings = new LinkedList<>();
                strings.add("Found");
                strings.add("");
                String st = "";
                for (int g =0;g<cols;g++){
                    if((temporarySortedLinkLstFull2D.get(foundAt).get(g)).equals("")){
                        st += "  ____  ";
                    }

                    st  +=  temporarySortedLinkLstFull2D.get(foundAt).get(g) + " | ";
                }
                strings.add(st);
                strings.add("");
                strings.add("-------------------");
                strings.add("Record details");
                strings.add("-------------------");
                int inxs=0;
                for (int inz = 0; inz<cols;inz++ ){
                    String emp = "";
                    if ((temporarySortedLinkLstFull2D.get(foundAt).get(inxs)).equals("")){
                        emp = " ____ ";
                    }
                    String ss = headers[inxs] + ": " + temporarySortedLinkLstFull2D.get(foundAt).get(inxs) + emp;
                    strings.add(ss);
                    ++inxs;
                }
                strings.add("-------------------");
                strings.add("Search time: " + duration + "microseconds");
                if (sec>0){
                    strings.add("------------------- or " + sec +" seconds");
                }
                jList4.setModel(new javax.swing.AbstractListModel<String>() {
                    /**
					 * 
					 */
					private static final long serialVersionUID = 1L;
					public int getSize() { return strings.size(); }
                    public String getElementAt(int i) { return strings.get(i); }
                });
                jScrollPane4.setViewportView(jList4);
                }
                else if (indx <= -1){
                    //Not found
                    jList4 = new javax.swing.JList<>();
                    jList4.setModel(new javax.swing.AbstractListModel<String>() {
                        /**
						 * 
						 */
						private static final long serialVersionUID = 1L;
						String[] strings = { "Not found", "-----", "Search time: "+duration};
                        public int getSize() { return strings.length; }
                        public String getElementAt(int i) { return strings[i]; }
                    });
                    jScrollPane4.setViewportView(jList4);   
                }
                jLabel43.setText("Search time: ");
                jLabel44.setText(duration + " microseconds");
                if (sec > 0.000001){
                    jLabel45.setText("or " + sec + " seconds");
                }
                else {
                	jLabel45.setText(" ");
                }
            return null;
        }
        
        public void done(){
            jProgressBar8.setIndeterminate(false);
            jLabel49.setText("Done. LinkedList Binary Search complete");
        }   
    }
    
    LinkedListSeq taskLinkedListSeq; //Perform a single search on LinkedList using Sequential Search
    class LinkedListSeq extends SwingWorker<Void,Void>{ //when the user clicks on Sequential Search on Linked List
        public Void doInBackground(){ //Linked List Sequential Search           LinkedList sequential           
            String search = jTextField2.getText();
            int statusFound = 0; //0 for not found, 1 for Found
            int foundAt = 0; //stores the location, index of found element
            int i = 0; //iterator counter
            jProgressBar2.setIndeterminate(true); jLabel24.setText(" Search in progress. May take a while");
            long startTime = System.nanoTime(); //Search timer START
            while(i < rows && statusFound==0){ //Sequential search Linked List
                if ((linkedList.get(i).get(0)).equals(search)){
                    statusFound = 1; //if FOUND element, then STOP search
                    foundAt = i; //The found element is found at index i
                }
                ++i;
            } //Sequential search linkedlist 
            long endTime = System.nanoTime(); //Search timer stopped
            long duration = (endTime - startTime); //Calculate Search Time in microseconds
            double sec = duration/1000000000.0; //Next we'll produce search time in seconds
            if (statusFound == 1){
                jList2 = new javax.swing.JList<>();
                LinkedList<String> strings = new LinkedList<>();
                strings.add("Found");
                strings.add("");
                String st = "";
                for (int g =0;g<cols;g++){
                    if((linkedList.get(foundAt).get(g)).equals("")){
                        st += "  ____  ";
                    }
                    st  +=  linkedList.get(foundAt).get(g) + " | "; 
                }
                strings.add(st);
                strings.add("");
                strings.add("-------------------");
                strings.add("Record details");
                strings.add("-------------------");
                int inxs=0;
                for (int inz = 0; inz<cols;inz++ ){
                    String emp = "";
                    if ((linkedList.get(foundAt).get(inxs)).equals("")){
                        emp = " ____ ";
                    }
                    String ss = headers[inxs] + ": " + linkedList.get(foundAt).get(inxs) + emp;
                    strings.add(ss);
                    ++inxs;
                }
                strings.add("-------------------");
                strings.add("Search time: " + duration + "microseconds");
                if (sec>0){
                    strings.add("------------------- or " + sec +" seconds");
                }
                jList2.setModel(new javax.swing.AbstractListModel<String>() {    
                    /**
					 * 
					 */
					private static final long serialVersionUID = 1L;
					public int getSize() { return strings.size(); }
                    public String getElementAt(int i) { return strings.get(i); }
                });
                jScrollPane2.setViewportView(jList2);
            }
            else if (statusFound == 0){
                jList2 = new javax.swing.JList<>();
                jList2.setModel(new javax.swing.AbstractListModel<String>() {
                    /**
					 * 
					 */
					private static final long serialVersionUID = 1L;
					String[] strings = { "Not found", "-----", "Search time: "+duration};
                    public int getSize() { return strings.length; }
                    public String getElementAt(int i) { return strings[i]; }
                });
                jScrollPane2.setViewportView(jList2);   
            }
            jLabel21.setText("Search time: ");
            jLabel22.setText(duration + " microseconds");
            if (sec > 0.000001){
                jLabel23.setText("or " + String.format("%.5f", sec) + " seconds");
            }
            else {
            	jLabel23.setText("");
            }
            return null;
        }
        
        public void done(){
            jProgressBar2.setIndeterminate(false);
            jLabel24.setText("Done. Search Complete.");
        } 
    }
    
    private OpenCSV taskOpenCSV; //This task will open the CSV file
    class OpenCSV extends SwingWorker<Void,Void>{ //When the user clicks on OPEN csv File
        @SuppressWarnings("unchecked")
		public Void doInBackground(){	//Open CSV file
        	FileNameExtensionFilter filter = new FileNameExtensionFilter("CSV files only","csv");
        	JFileChooser filechooser = new JFileChooser();
        	filechooser.setFileFilter(filter);
        	filechooser.setAcceptAllFileFilterUsed(false);
            int i = filechooser.showOpenDialog(null);
            if (i == JFileChooser.APPROVE_OPTION) {
                File f = filechooser.getSelectedFile();
                String filepath = f.getPath();
                path = filepath; openCSVagain=false;
                jLabel16.setText(" Loading, please wait. You are opening the CSV file: \"" + path + "\"");
                javax.swing.table.DefaultTableModel csv_data = new javax.swing.table.DefaultTableModel();
                try{  
                    
                	if (arrayList.size()>1){
                		arrayList.clear(); linkedList.clear(); hashTable.clear(); keyArrayList.clear(); keyLinkedList.clear();
                		temporarySortedArrLstIdsonly.clear(); temporarySortedArrLstFull2D.clear(); temporarySortedLinkLstIdsonly.clear(); temporarySortedLinkLstFull2D.clear();
                	}
                	
                	jProgressBar1.setIndeterminate(true);
                    BufferedReader br=new BufferedReader(new FileReader(filepath));    
                    String header = br.readLine(); 
                    CLIversion.columnHeading=header;
                    String[] colss = header.split(",");
                    headers = colss;
                    cols = colss.length;
                    keyName = colss[0];
                    for (int s = 0; s<colss.length;s++) {
                        csv_data.addColumn(colss[s]);
                    }
                    String line=""; int r=0;
                    while((line=br.readLine())!=null){    
                        String[] arr = line.split(",(?=(?:[^\"]*\"[^\"]*\")*[^\"]*$)", -1);
                        arrayList.add(new ArrayList<String>());
                        linkedList.add(new LinkedList<String>());
                        @SuppressWarnings("rawtypes")
                        Vector row = new Vector();
                        for(int c=0; c<arr.length;c++) {
                            row.add(arr[c]);
                            arrayList.get(r).add(arr[c]); 
                            linkedList.get(r).add(arr[c]);
                        }
                        hashTable.put(arr[0], arrayList.get(r));
                        csv_data.addRow(row); ++r;
                        keyArrayList.add(arr[0]);keyLinkedList.add(arr[0]);
                    }
                    rows=r;
                    br.close();
                    }catch (Exception ex) {
                        ex.printStackTrace(); 
                    }      
                jTable1.setModel(csv_data);
                jTable1.setAutoResizeMode(0);
                jLabel17.setText("This CSV file has " + rows + " rows and " + cols +" columns. The 10% size is: " +((int)(rows*0.1)));
                midEl.setText("Middle record:");
                valueOfmidEL.setText(keyName + "=" + arrayList.get( (int)(rows/2) ).get(0) );
                lastEl.setText("Last/final record:");
                valueoflastEL.setText( keyName + "=" + arrayList.get(rows-1).get(0) );
                tenPercc = new String[(int)(rows*0.1)]; //This empty array will be used later for 10% random search on ID's
                rann = (int)(Math.random()*((rows/2)-2+1)+2); //Random number, for random search
                int s =rann; CLIversion.ran = rann;
                endrann = 0;
                for (int ii = 0; ii < tenPercc.length;ii++ ){ //Prepare and fill the 10% array
                    tenPercc[ii] = arrayList.get(s).get(0);
                    ++s;
                }
                 //Store the last index of the 10% array
                endrann = s; CLIversion.endran = endrann;
                openCSVagain=true;
                CLIversion.filename=path;
                Comparator<String> c = new Comparator<String>() {
                    @Override
                    public int compare(String p1, String p2)
                    {
                        return p1.compareTo(p2);
                    } //This comparator is a help class for the buit-in Java Binary search
                }; //Must! Binary Search can only be performed on sorted collections
                Comparator<ArrayList<String>> ccArrL = new Comparator<ArrayList<String>>() {
                    @Override
                    public int compare(ArrayList<String> l1, ArrayList<String> l2)
                    {
                        String p1 = l1.get(0);
                        String p2 = l2.get(0);
                    	return p1.compareTo(p2);
                    } //This comparator is a help class for the buit-in Java Binary search
                }; //Must! Binary Search can only be performed on sorted collections
                Comparator<LinkedList<String>> ccLnkL = new Comparator<LinkedList<String>>() {
                    @Override
                    public int compare(LinkedList<String> l1, LinkedList<String> l2)
                    {
                        String p1 = l1.get(0);
                        String p2 = l2.get(0);
                    	return p1.compareTo(p2);
                    } //This comparator is a help class for the buit-in Java Binary search
                }; //Must! Binary Search can only be performed on sorted collections
                temporarySortedArrLstIdsonly.addAll(keyArrayList);
                temporarySortedArrLstFull2D.addAll(arrayList);
                temporarySortedArrLstIdsonly.sort(c);
                temporarySortedArrLstFull2D.sort(ccArrL);
                
                temporarySortedLinkLstIdsonly.addAll(keyLinkedList);
                temporarySortedLinkLstFull2D.addAll(linkedList);
                temporarySortedLinkLstIdsonly.sort(c);
                temporarySortedLinkLstFull2D.sort(ccLnkL);
                
            }
            else{
                openCSVagain=false;
            }
            return null;
        }
        
        public void done(){
            jProgressBar1.setIndeterminate(false);
            if (path!=null && openCSVagain==true){
                jLabel16.setText(" Done. You have opened the CSV file: \"" + path + "\"");
                JOptionPane.showMessageDialog(null, "Open CSV file, Completed");
            }
            
        }
    }
    
    /**
     * Creates new form GUIversion
     */
    public GUIversion() {
        this.keyName = "search key word";
        initComponents();
        setTitle("Mini Search Engine (CS214 - Asgn1 2021)            - GUI Version");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
        private void jTabbedPane1MouseEntered(java.awt.event.MouseEvent evt) {                                          
        // TODO add your handling code here:
        jLabel4.setText("Enter the \""+ keyName +"\" below:");
        jLabel5.setText("Enter the \""+ keyName +"\" below:");
        jLabel9.setText("Enter the \""+ keyName +"\" below:");
        jLabel10.setText("Enter the \""+ keyName +"\" below:");
        jLabel12.setText("Enter the \""+ keyName +"\" below:");
        jLabel13.setText("Total records (no. of rows) in CSV file: "+ rows +" rows");
        jLabel14.setText("10% size: " + (int)(rows*0.1) );
        jLabel15.setText("So the search starts from row no."+ rann +" ,  and goes all the way to row no." + endrann + " for all Data Structures");
    }                                         

    private void jTabbedPane1MouseClicked(java.awt.event.MouseEvent evt) {                                          
        // TODO add your handling code here:
    }                                         

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {                                         
        // TODO add your handling code here:
    }                                        

    private void jButton6MouseClicked(java.awt.event.MouseEvent evt) {                                      
        // TODO add your handling code here:
        taskTenPercHashTableSearch = new TenPercHashTableSearch();
        if(javax.swing.SwingWorker.StateValue.STARTED==taskTenPercHashTableSearch.getState()){
            taskTenPercHashTableSearch.cancel(false);
            taskTenPercHashTableSearch.cancel(true);
        }
        taskTenPercHashTableSearch.execute();

        taskTenPercArrayListBinary = new TenPercArrayListBinary();
        if(javax.swing.SwingWorker.StateValue.STARTED==taskTenPercArrayListBinary.getState()){
            taskTenPercArrayListBinary.cancel(false);
            taskTenPercArrayListBinary.cancel(true);
        }
        taskTenPercArrayListBinary.execute();

        taskTenPercLinkedListBinary = new TenPercLinkedListBinary();
        if(javax.swing.SwingWorker.StateValue.STARTED==taskTenPercLinkedListBinary.getState()){
            taskTenPercLinkedListBinary.cancel(false);
            taskTenPercLinkedListBinary.cancel(true);
        }
        taskTenPercLinkedListBinary.execute();

        taskTenPercArrayListSeq = new TenPercArrayListSeq();
        if(javax.swing.SwingWorker.StateValue.STARTED==taskTenPercArrayListSeq.getState()){
            taskTenPercArrayListSeq.cancel(false);
            taskTenPercArrayListSeq.cancel(true);
        }
        taskTenPercArrayListSeq.execute();

        taskTenPercLinkedListSeq = new TenPercLinkedListSeq();
        if(javax.swing.SwingWorker.StateValue.STARTED==taskTenPercLinkedListSeq.getState()){
            taskTenPercLinkedListSeq.cancel(false);
            taskTenPercLinkedListSeq.cancel(true);
        }
        taskTenPercLinkedListSeq.execute();
    }                                     

    private void jButton5MouseClicked(java.awt.event.MouseEvent evt) {                                      
        taskHashTableSearch = new HashTableSearch();
        taskHashTableSearch.execute();
    }                                     

    private void jTextField5KeyPressed(java.awt.event.KeyEvent evt) {                                       
        // TODO add your handling code here:
        //Press ENTER to go to Button5      HashTable Search
        if (evt.getKeyCode()==java.awt.event.KeyEvent.VK_ENTER){
            java.awt.event.MouseEvent ee = null;
            jButton5MouseClicked(ee);
        }
    }                                      

    private void jTextField5ActionPerformed(java.awt.event.ActionEvent evt) {                                            
        // TODO add your handling code here:
    }                                           

    private void jTabbedPane3MouseEntered(java.awt.event.MouseEvent evt) {                                          
        // TODO add your handling code here:
        jLabel9.setText("Enter the \""+ keyName +"\" below:");
        jLabel10.setText("Enter the \""+ keyName +"\" below:");
    }                                         

    private void jButton4MouseClicked(java.awt.event.MouseEvent evt) {                                      
        // TODO add your handling code here: BINARY search on LinkedList
        //Linked List Binary Search
        taskLinkedListBinary = new LinkedListBinary();
        taskLinkedListBinary.execute();
    }                                     

    private void jTextField4KeyPressed(java.awt.event.KeyEvent evt) {                                       
        // TODO add your handling code here: //Button 4 is binary search Linked List
        //Press ENTER to go to Button4      Linked List Binary Search
        if (evt.getKeyCode()==java.awt.event.KeyEvent.VK_ENTER){
            java.awt.event.MouseEvent ee = null;
            jButton4MouseClicked(ee);
        }
    }                                      

    private void jTextField4ActionPerformed(java.awt.event.ActionEvent evt) {                                            
        // TODO add your handling code here:
    }                                           

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {                                         
        // TODO add your handling code here:
    }                                        

    private void jButton3MouseClicked(java.awt.event.MouseEvent evt) {                                      
        // TODO add your handling code here: Array List Binary
        //Binary Search on Array List
        taskArrayListBinary = new ArrayListBinary();
        taskArrayListBinary.execute();
    }                                     

    private void jTextField3KeyPressed(java.awt.event.KeyEvent evt) {                                       
        // TODO add your handling code here:     Binary search ArrayList press ENTER
        //Press Enter to goTo button3
        if (evt.getKeyCode()==java.awt.event.KeyEvent.VK_ENTER){
            java.awt.event.MouseEvent ee = null;
            jButton3MouseClicked(ee);
        }
    }                                      

    private void jTextField3ActionPerformed(java.awt.event.ActionEvent evt) {                                            
        // TODO add your handling code here:
    }                                           

    private void jTabbedPane2MouseEntered(java.awt.event.MouseEvent evt) {                                          
        // TODO add your handling code here:
        jLabel4.setText("Enter the \""+ keyName +"\" below:");
        jLabel5.setText("Enter the \""+ keyName +"\" below:");
    }                                         

    private void jButton2MouseClicked(java.awt.event.MouseEvent evt) {                                      
        // TODO add your handling code here:
        // Linked List Sequential Search
        taskLinkedListSeq = new LinkedListSeq();
        taskLinkedListSeq.execute();
    }                                     

    private void jTextField2KeyPressed(java.awt.event.KeyEvent evt) {                                       
        // TODO add your handling code here:
        if (evt.getKeyCode()==java.awt.event.KeyEvent.VK_ENTER){
            java.awt.event.MouseEvent ee = null;
            jButton2MouseClicked(ee);
        }
    }                                      

    private void searchBtnArrLSeqActionPerformed(java.awt.event.ActionEvent evt) {                                                 
        // TODO add your handling code here:
    }                                                

    private void searchBtnArrLSeqMouseClicked(java.awt.event.MouseEvent evt) { //ArrayListseq      sequential search array list  sequential search arrayList                                       
        // TODO add your handling code here: ArrayList Sequential Search
        //Perform Sequential Search for ArrayList
        String search = jTextField1.getText(); //Array List sequential search
        int statusFound = 0; //0 for not found, 1 for Found
        int foundAt = 0; //stores the location, index of found element
        int i = 0; //iterator counter
        long startTime = System.nanoTime(); //Search timer START
        while(i < rows && statusFound==0){//Sequential Search for Array List
            if ((arrayList.get(i).get(0)).equals(search)){
                statusFound = 1; //if FOUND element, then STOP search
                foundAt = i; //Keep the index of found element
            }
            ++i;
        } //Sequential Search Array List
        long endTime = System.nanoTime(); //Search timer stopped
        long duration = (endTime - startTime); //Calculate Search Time
        double sec = duration/1000000000; //Next we'll make search time in seconds
        if (statusFound == 1){
            jList1 = new javax.swing.JList<>();
            ArrayList<String> strings = new ArrayList<>(); //GUI component for printing search result. Used for printing Strings only
            strings.add("Found");
            strings.add("");
            String st = "";
            for (int g =0;g<cols;g++){
                if((arrayList.get(foundAt).get(g)).equals("")){
                    st += "  ____  ";
                }
                st  +=  arrayList.get(foundAt).get(g) + " | ";
            }
            strings.add(st);
            strings.add("");
            strings.add("-------------------");
            strings.add("Record details");
            strings.add("-------------------");
            int inxs=0;
            for (int inz = 0; inz<cols;inz++ ){
                String emp = "";
                if ((arrayList.get(foundAt).get(inxs)).equals("")){
                    emp = " ____ ";
                }
                String ss = headers[inxs] + ": " + arrayList.get(foundAt).get(inxs) + emp;
                strings.add(ss);
                ++inxs;
            }
            strings.add("-------------------");
            strings.add("Search time: " + duration + "microseconds");
            if (sec>0){
                strings.add("------------------- or " + sec +" seconds");
            }
            jList1.setModel(new javax.swing.AbstractListModel<String>() {
                /**
				 * 
				 */
				private static final long serialVersionUID = 1L;
				public int getSize() { return strings.size(); }
                public String getElementAt(int i) { return strings.get(i); }
            });
            jScrollPane1.setViewportView(jList1);
        }
        else if (statusFound == 0){
            jList1 = new javax.swing.JList<>();
            jList1.setModel(new javax.swing.AbstractListModel<String>() {
                /**
				 * 
				 */
				private static final long serialVersionUID = 1L;
				String[] strings = { "Not found", "-----", "Search time: "+duration};
                public int getSize() { return strings.length; }
                public String getElementAt(int i) { return strings[i]; }
            });
            jScrollPane1.setViewportView(jList1);
        }
        jLabel18.setText("Search time: ");
        jLabel19.setText(duration + " microseconds");
        if (sec > 0.000001){
            jLabel20.setText("or " + sec + " seconds");
        }
    }                                             

    private void jTextField1KeyPressed(java.awt.event.KeyEvent evt) {                                       
        if (evt.getKeyCode()==java.awt.event.KeyEvent.VK_ENTER){
            java.awt.event.MouseEvent ee = null; //Press ENTER to start ArrayList Sequential
            searchBtnArrLSeqMouseClicked(ee);
        }
    }                                      

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {                                            
        // TODO add your handling code here:
    }                                           

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {                                         
        // TODO add your handling code here:
    }                                        

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {                                      
        // TODO add your handling code here:
        AboutUs ab = new AboutUs();
        ab.setVisible(true);
    }                                     

    private void btn_selectfileActionPerformed(java.awt.event.ActionEvent evt) {                                               
        taskOpenCSV = new OpenCSV();
        taskOpenCSV.execute();
    }                                              

    private void jButton13MouseClicked(java.awt.event.MouseEvent evt) {                                       
        // TODO add your handling code here:
        AboutUs ab = new AboutUs();
        ab.setVisible(true);
    }                                      

    private void jButton13ActionPerformed(java.awt.event.ActionEvent evt) {                                          
        // TODO add your handling code here:
    }                                         

    private void jButton16MouseClicked(java.awt.event.MouseEvent evt) {                                       
        // TODO add your handling code here:
        AboutUs ab = new AboutUs();
        ab.setVisible(true);
    }                                      

    private void jButton15MouseClicked(java.awt.event.MouseEvent evt) {                                       
        // TODO add your handling code here:
        AboutUs ab = new AboutUs();
        ab.setVisible(true);
    }                                      

    private void jButton14MouseClicked(java.awt.event.MouseEvent evt) {                                       
        // TODO add your handling code here:
        AboutUs ab = new AboutUs();
        ab.setVisible(true);
    }                                      

    /**
     * @param args the command line arguments
     */
    public static void goStart() {
        
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUIversion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUIversion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUIversion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUIversion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUIversion().setVisible(true);
            }
        });
    }
    
    public String getPath () {
        return path;
    }
    
    public int getRann (){
        return rann;
    }
    
    public int getEndRann (){
        return endrann;
    }
    
    public String[] get10percArray (){
        return tenPercc;
    }
    
    public int getCols(){
        return cols;
    }
    
    public int getRows(){
        return rows;
    }
    
    public String[] getHeaders(){
        return headers;
    }
    
    // Variables declaration - do not modify                     
    private javax.swing.JPanel arrLstSeqTime;
    private javax.swing.JButton btn_selectfile;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton13;
    private javax.swing.JButton jButton14;
    private javax.swing.JButton jButton15;
    private javax.swing.JButton jButton16;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel49;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel50;
    private javax.swing.JLabel jLabel51;
    private javax.swing.JLabel jLabel52;
    private javax.swing.JLabel jLabel53;
    private javax.swing.JLabel jLabel54;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JList<String> jList1;
    private javax.swing.JList<String> jList10;
    private javax.swing.JList<String> jList2;
    private javax.swing.JList<String> jList3;
    private javax.swing.JList<String> jList4;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel17;
    private javax.swing.JPanel jPanel18;
    private javax.swing.JPanel jPanel19;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel20;
    private javax.swing.JPanel jPanel21;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JProgressBar jProgressBar1;
    private javax.swing.JProgressBar jProgressBar2;
    private javax.swing.JProgressBar jProgressBar3;
    private javax.swing.JProgressBar jProgressBar4;
    private javax.swing.JProgressBar jProgressBar5;
    private javax.swing.JProgressBar jProgressBar6;
    private javax.swing.JProgressBar jProgressBar7;
    private javax.swing.JProgressBar jProgressBar8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane11;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JTabbedPane jTabbedPane3;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JLabel lastEl;
    private javax.swing.JLabel midEl;
    private javax.swing.JButton searchBtnArrLSeq;
    private javax.swing.JLabel valueOfmidEL;
    private javax.swing.JLabel valueoflastEL;
    // End of variables declaration                   
    
    private void initComponents() {

        jPanel10 = new javax.swing.JPanel();
        jMenuItem1 = new javax.swing.JMenuItem();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel11 = new javax.swing.JPanel();
        btn_selectfile = new javax.swing.JButton();
        jScrollPane11 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jPanel12 = new javax.swing.JPanel();
        midEl = new javax.swing.JLabel();
        valueOfmidEL = new javax.swing.JLabel();
        valueoflastEL = new javax.swing.JLabel();
        lastEl = new javax.swing.JLabel();
        jProgressBar1 = new javax.swing.JProgressBar();
        jButton1 = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        jPanel8 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        searchBtnArrLSeq = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        arrLstSeqTime = new javax.swing.JPanel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jPanel9 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jList2 = new javax.swing.JList<>();
        jPanel13 = new javax.swing.JPanel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jProgressBar2 = new javax.swing.JProgressBar();
        jLabel1 = new javax.swing.JLabel();
        jButton16 = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jTabbedPane3 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jList3 = new javax.swing.JList<>();
        jPanel14 = new javax.swing.JPanel();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jTextField4 = new javax.swing.JTextField();
        jButton4 = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        jList4 = new javax.swing.JList<>();
        jPanel20 = new javax.swing.JPanel();
        jLabel43 = new javax.swing.JLabel();
        jLabel44 = new javax.swing.JLabel();
        jLabel45 = new javax.swing.JLabel();
        jProgressBar8 = new javax.swing.JProgressBar();
        jLabel49 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jButton15 = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jTextField5 = new javax.swing.JTextField();
        jButton5 = new javax.swing.JButton();
        jScrollPane10 = new javax.swing.JScrollPane();
        jList10 = new javax.swing.JList<>();
        jPanel21 = new javax.swing.JPanel();
        jLabel46 = new javax.swing.JLabel();
        jLabel47 = new javax.swing.JLabel();
        jLabel48 = new javax.swing.JLabel();
        jButton10 = new javax.swing.JButton();
        jButton14 = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jButton6 = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jPanel15 = new javax.swing.JPanel();
        jProgressBar4 = new javax.swing.JProgressBar();
        jLabel28 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        jLabel54 = new javax.swing.JLabel();
        jPanel16 = new javax.swing.JPanel();
        jProgressBar6 = new javax.swing.JProgressBar();
        jLabel34 = new javax.swing.JLabel();
        jLabel35 = new javax.swing.JLabel();
        jLabel36 = new javax.swing.JLabel();
        jLabel51 = new javax.swing.JLabel();
        jPanel17 = new javax.swing.JPanel();
        jProgressBar3 = new javax.swing.JProgressBar();
        jLabel31 = new javax.swing.JLabel();
        jLabel32 = new javax.swing.JLabel();
        jLabel33 = new javax.swing.JLabel();
        jLabel50 = new javax.swing.JLabel();
        jPanel18 = new javax.swing.JPanel();
        jProgressBar5 = new javax.swing.JProgressBar();
        jLabel37 = new javax.swing.JLabel();
        jLabel38 = new javax.swing.JLabel();
        jLabel39 = new javax.swing.JLabel();
        jLabel53 = new javax.swing.JLabel();
        jPanel19 = new javax.swing.JPanel();
        jProgressBar7 = new javax.swing.JProgressBar();
        jLabel40 = new javax.swing.JLabel();
        jLabel41 = new javax.swing.JLabel();
        jLabel42 = new javax.swing.JLabel();
        jLabel52 = new javax.swing.JLabel();
        jButton13 = new javax.swing.JButton();

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        jMenuItem1.setText("jMenuItem1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTabbedPane1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTabbedPane1MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jTabbedPane1MouseEntered(evt);
            }
        });

        btn_selectfile.setText("Choose your CSV file");
        btn_selectfile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_selectfileActionPerformed(evt);
            }
        });

        jScrollPane11.setToolTipText("");

        jScrollPane11.setViewportView(jTable1);

        jLabel16.setText("<--- Click here to open \"CSV\" file");

        jLabel17.setText("   ");

        jPanel12.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(153, 153, 153), 1, true));
        jPanel12.setForeground(new java.awt.Color(204, 204, 204));

        midEl.setText("  ");

        valueOfmidEL.setText("  ");

        valueoflastEL.setText("  ");

        lastEl.setText("  ");

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(valueOfmidEL, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(valueoflastEL, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel12Layout.createSequentialGroup()
                        .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(midEl, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lastEl, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(midEl)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(valueOfmidEL)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                .addComponent(lastEl)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(valueoflastEL)
                .addContainerGap())
        );

        jButton1.setFont(new java.awt.Font("Segoe UI", 0, 10)); // NOI18N
        jButton1.setText("About Us");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel11Layout.createSequentialGroup()
                                .addGap(19, 19, 19)
                                .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 832, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel11Layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel11Layout.createSequentialGroup()
                                        .addComponent(jProgressBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel11Layout.createSequentialGroup()
                                        .addComponent(btn_selectfile, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 606, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(138, 138, 138)))
                        .addComponent(jPanel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel11Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton1))
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane11)))
                .addContainerGap())
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btn_selectfile)
                            .addComponent(jLabel16))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jProgressBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel17)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane11, javax.swing.GroupLayout.PREFERRED_SIZE, 398, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1)
                .addGap(164, 164, 164))
        );

        jTabbedPane1.addTab("Open CSV file", jPanel11);

        jTabbedPane2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jTabbedPane2MouseEntered(evt);
            }
        });

        jLabel2.setText("You have selected ArrayList (Sequential Search)");

        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });
        jTextField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField1KeyPressed(evt);
            }
        });

        jLabel4.setText("Enter the \"structureID\" below:");

        searchBtnArrLSeq.setText("Search");
        searchBtnArrLSeq.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                searchBtnArrLSeqMouseClicked(evt);
            }
        });
        searchBtnArrLSeq.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchBtnArrLSeqActionPerformed(evt);
            }
        });

        jList1.setFixedCellWidth(0);
        jScrollPane1.setViewportView(jList1);

        arrLstSeqTime.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153)));

        jLabel18.setText(" ");

        jLabel19.setText("                      ");

        jLabel20.setText("                            ");

        javax.swing.GroupLayout arrLstSeqTimeLayout = new javax.swing.GroupLayout(arrLstSeqTime);
        arrLstSeqTime.setLayout(arrLstSeqTimeLayout);
        arrLstSeqTimeLayout.setHorizontalGroup(
            arrLstSeqTimeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(arrLstSeqTimeLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(arrLstSeqTimeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel19, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel18, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel20, javax.swing.GroupLayout.DEFAULT_SIZE, 263, Short.MAX_VALUE))
                .addContainerGap())
        );
        arrLstSeqTimeLayout.setVerticalGroup(
            arrLstSeqTimeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(arrLstSeqTimeLayout.createSequentialGroup()
                .addComponent(jLabel18)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel20, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 840, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(31, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(searchBtnArrLSeq))
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 316, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(arrLstSeqTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(54, 54, 54))))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel4)
                        .addGap(7, 7, 7)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(searchBtnArrLSeq)))
                    .addComponent(arrLstSeqTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 378, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 197, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jTabbedPane2.addTab("ArrayList (Seq)", jPanel8);

        jLabel3.setText("You have selected LinkedList (Sequential Search)");

        jLabel5.setText("Enter the \"structureID\" below:");

        jTextField2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField2KeyPressed(evt);
            }
        });

        jButton2.setText("Search");
        jButton2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton2MouseClicked(evt);
            }
        });

        jScrollPane2.setViewportView(jList2);

        jPanel13.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153)));

        jLabel21.setText(" ");

        jLabel22.setText("  ");

        jLabel23.setText("   ");

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel21, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel22, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel23, javax.swing.GroupLayout.DEFAULT_SIZE, 252, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addComponent(jLabel21)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel22)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel23)
                .addGap(18, 18, 18))
        );

        jLabel24.setText("  ");

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(jPanel9Layout.createSequentialGroup()
                            .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel9Layout.createSequentialGroup()
                                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jButton2))
                                .addComponent(jLabel5)
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 320, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 881, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addComponent(jProgressBar2, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel24, javax.swing.GroupLayout.PREFERRED_SIZE, 430, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 187, Short.MAX_VALUE))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton2))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jPanel13, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 344, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jProgressBar2, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel24))
                .addContainerGap())
        );

        jTabbedPane2.addTab("LinkedList (Seq)", jPanel9);

        jLabel1.setText("You have selected Sequential Search. Select a Data Structure below to begin.");

        jButton16.setFont(new java.awt.Font("Segoe UI", 0, 10)); // NOI18N
        jButton16.setText("About Us");
        jButton16.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton16MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTabbedPane2)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton16)
                .addGap(34, 34, 34))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton16)
                .addContainerGap(10, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Sequential Search", jPanel4);

        jTabbedPane3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jTabbedPane3MouseEntered(evt);
            }
        });

        jLabel7.setText("You have selected ArrayList (Built-in Binary Search)");

        jLabel9.setText("Enter the \"structureID\" below:");

        jTextField3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField3ActionPerformed(evt);
            }
        });
        jTextField3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField3KeyPressed(evt);
            }
        });

        jButton3.setText("Search");
        jButton3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton3MouseClicked(evt);
            }
        });
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jScrollPane3.setViewportView(jList3);

        jPanel14.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153)));

        jLabel25.setText("  ");

        jLabel26.setText(" ");

        jLabel27.setText(" ");

        javax.swing.GroupLayout jPanel14Layout = new javax.swing.GroupLayout(jPanel14);
        jPanel14.setLayout(jPanel14Layout);
        jPanel14Layout.setHorizontalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel25, javax.swing.GroupLayout.DEFAULT_SIZE, 260, Short.MAX_VALUE)
                    .addComponent(jLabel26, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel27, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel14Layout.setVerticalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel25)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel26)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel27))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton3))
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 312, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(268, 268, 268)
                        .addComponent(jPanel14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 864, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(124, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton3)))
                    .addComponent(jPanel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 326, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(88, Short.MAX_VALUE))
        );

        jTabbedPane3.addTab("ArrayList (Binary)", jPanel1);

        jLabel8.setText("You have selected LinkedList (Built-in Binary Search)");

        jLabel10.setText("Enter the \"structureID\" below:");

        jTextField4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField4ActionPerformed(evt);
            }
        });
        jTextField4.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField4KeyPressed(evt);
            }
        });

        jButton4.setText("Search");
        jButton4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton4MouseClicked(evt);
            }
        });

        jScrollPane4.setViewportView(jList4);

        jPanel20.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153)));

        jLabel43.setText("  ");

        jLabel44.setText("  ");

        jLabel45.setText("  ");

        javax.swing.GroupLayout jPanel20Layout = new javax.swing.GroupLayout(jPanel20);
        jPanel20.setLayout(jPanel20Layout);
        jPanel20Layout.setHorizontalGroup(
            jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel20Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel44, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel43, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel45, javax.swing.GroupLayout.DEFAULT_SIZE, 221, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel20Layout.setVerticalGroup(
            jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel20Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel43)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel44)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 10, Short.MAX_VALUE)
                .addComponent(jLabel45)
                .addContainerGap())
        );

        jLabel49.setText("   ");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 876, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                                            .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(jButton4)))
                                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(319, 319, 319)
                                .addComponent(jPanel20, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(114, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jProgressBar8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel49, javax.swing.GroupLayout.PREFERRED_SIZE, 478, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton4)))
                    .addComponent(jPanel20, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 336, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel49)
                    .addComponent(jProgressBar8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(40, Short.MAX_VALUE))
        );

        jTabbedPane3.addTab("LinkedList (Binary)", jPanel2);

        jLabel6.setText("You have selected Built-in Binary Search. Select a Data Structure below to begin.");

        jButton15.setFont(new java.awt.Font("Segoe UI", 0, 10)); // NOI18N
        jButton15.setText("About Us");
        jButton15.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton15MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jTabbedPane3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton15))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 609, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton15))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTabbedPane3)))
                .addContainerGap())
        );

        jTabbedPane1.addTab("Binary Search", jPanel5);

        jLabel11.setText("You have selected HashTable Search. ");

        jLabel12.setText("Enter the \"structureID\" below:");

        jTextField5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField5ActionPerformed(evt);
            }
        });
        jTextField5.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField5KeyPressed(evt);
            }
        });

        jButton5.setText("Search");
        jButton5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton5MouseClicked(evt);
            }
        });

        jScrollPane10.setViewportView(jList10);

        jPanel21.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153)));

        jLabel46.setText(" ");

        jLabel47.setText(" ");

        jLabel48.setText(" ");

        javax.swing.GroupLayout jPanel21Layout = new javax.swing.GroupLayout(jPanel21);
        jPanel21.setLayout(jPanel21Layout);
        jPanel21Layout.setHorizontalGroup(
            jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel21Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel46, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel47, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel48, javax.swing.GroupLayout.DEFAULT_SIZE, 258, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel21Layout.setVerticalGroup(
            jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel21Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel46)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel47)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel48)
                .addContainerGap(26, Short.MAX_VALUE))
        );

        jButton10.setFont(new java.awt.Font("Segoe UI", 0, 8)); // NOI18N
        jButton10.setText("About Us");

        jButton14.setFont(new java.awt.Font("Segoe UI", 0, 10)); // NOI18N
        jButton14.setText("About Us");
        jButton14.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton14MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane10, javax.swing.GroupLayout.PREFERRED_SIZE, 836, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton5))
                            .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 319, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel21, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(244, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton14, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(57, 57, 57))
            .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel6Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jButton10)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel12)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton5)))
                    .addComponent(jPanel21, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane10, javax.swing.GroupLayout.PREFERRED_SIZE, 370, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 59, Short.MAX_VALUE)
                .addComponent(jButton14)
                .addContainerGap())
            .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel6Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jButton10)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        jTabbedPane1.addTab("HashTable Search", jPanel6);

        jLabel13.setText("Total records (no. of rows) in CSV file: ______ rows");

        jLabel14.setText("10% size: _______");

        jLabel15.setText("So the search starts from row.no ____   and goes all the way to row.no _____   for all Data Structures");

        jButton6.setText("Start 10% Search");
        jButton6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton6MouseClicked(evt);
            }
        });
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jPanel15.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153)));

        jLabel28.setText("   ");

        jLabel29.setText("  ");

        jLabel30.setText("  ");

        jLabel54.setText("  ");

        javax.swing.GroupLayout jPanel15Layout = new javax.swing.GroupLayout(jPanel15);
        jPanel15.setLayout(jPanel15Layout);
        jPanel15Layout.setHorizontalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jProgressBar4, javax.swing.GroupLayout.DEFAULT_SIZE, 317, Short.MAX_VALUE)
                    .addComponent(jLabel28, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel29, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel30, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel54, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel15Layout.setVerticalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jProgressBar4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel28)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 74, Short.MAX_VALUE)
                .addComponent(jLabel29)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel30)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel54)
                .addGap(24, 24, 24))
        );

        jPanel16.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153)));

        jLabel34.setText(" ");

        jLabel35.setText(" ");

        jLabel36.setText(" ");

        jLabel51.setText(" ");

        javax.swing.GroupLayout jPanel16Layout = new javax.swing.GroupLayout(jPanel16);
        jPanel16.setLayout(jPanel16Layout);
        jPanel16Layout.setHorizontalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jProgressBar6, javax.swing.GroupLayout.DEFAULT_SIZE, 315, Short.MAX_VALUE)
                    .addGroup(jPanel16Layout.createSequentialGroup()
                        .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel34, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel35, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel36, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel51, javax.swing.GroupLayout.DEFAULT_SIZE, 307, Short.MAX_VALUE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel16Layout.setVerticalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jProgressBar6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel34)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 66, Short.MAX_VALUE)
                .addComponent(jLabel35)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel36)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel51)
                .addGap(28, 28, 28))
        );

        jPanel17.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153)));

        jLabel31.setText("   ");

        jLabel32.setText("   ");

        jLabel33.setText("   ");

        jLabel50.setText("   ");

        javax.swing.GroupLayout jPanel17Layout = new javax.swing.GroupLayout(jPanel17);
        jPanel17.setLayout(jPanel17Layout);
        jPanel17Layout.setHorizontalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel17Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jProgressBar3, javax.swing.GroupLayout.DEFAULT_SIZE, 359, Short.MAX_VALUE)
                    .addComponent(jLabel31, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel32, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel33, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel50, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel17Layout.setVerticalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel17Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jProgressBar3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel31)
                .addGap(65, 65, 65)
                .addComponent(jLabel32)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel33)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel50)
                .addContainerGap(34, Short.MAX_VALUE))
        );

        jPanel18.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153)));

        jLabel37.setText("  ");

        jLabel38.setText("  ");

        jLabel39.setText("  ");

        jLabel53.setText("   ");

        javax.swing.GroupLayout jPanel18Layout = new javax.swing.GroupLayout(jPanel18);
        jPanel18.setLayout(jPanel18Layout);
        jPanel18Layout.setHorizontalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel18Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jProgressBar5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel37, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel38, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel39, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel53, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel18Layout.setVerticalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel18Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jProgressBar5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel37)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 88, Short.MAX_VALUE)
                .addComponent(jLabel38)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel39)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel53)
                .addGap(27, 27, 27))
        );

        jPanel19.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153)));

        jLabel40.setText("  ");

        jLabel41.setText("   ");

        jLabel42.setText("   ");

        jLabel52.setText("  ");

        javax.swing.GroupLayout jPanel19Layout = new javax.swing.GroupLayout(jPanel19);
        jPanel19.setLayout(jPanel19Layout);
        jPanel19Layout.setHorizontalGroup(
            jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel19Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jProgressBar7, javax.swing.GroupLayout.DEFAULT_SIZE, 315, Short.MAX_VALUE)
                    .addComponent(jLabel41, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel42, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel52, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel40, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel19Layout.setVerticalGroup(
            jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel19Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jProgressBar7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel40)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 93, Short.MAX_VALUE)
                .addComponent(jLabel41)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel42)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel52)
                .addGap(25, 25, 25))
        );

        jButton13.setFont(new java.awt.Font("Segoe UI", 0, 10)); // NOI18N
        jButton13.setText("About Us");
        jButton13.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton13MouseClicked(evt);
            }
        });
        jButton13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton13ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 1044, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 616, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(42, Short.MAX_VALUE))
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 359, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(83, 83, 83))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel18, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jPanel16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(jPanel17, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                        .addComponent(jButton13)
                        .addGap(148, 148, 148)))
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel19, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(41, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(jLabel13)
                        .addGap(12, 12, 12)
                        .addComponent(jLabel14))
                    .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel15)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(33, 33, 33)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jPanel18, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel19, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGap(136, 136, 136)
                        .addComponent(jPanel17, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton13)))
                .addContainerGap(30, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Random 10% Search", jPanel7);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1086, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 594, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(18, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>                        


    
}

class AboutUs extends javax.swing.JFrame {
    /**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	public AboutUs() {
        initComponents();
        setTitle("About the team");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        filler1 = new javax.swing.Box.Filler(new java.awt.Dimension(123, 0), new java.awt.Dimension(123, 0), new java.awt.Dimension(123, 32767));

        setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
        setBackground(new java.awt.Color(153, 153, 153));

        jLabel1.setText("Group members:");

        jLabel2.setText("Sireli Savutila (s11086287@student.usp.ac.fj)");

        jLabel3.setText("Ratu Solomoni Railoa (s11123197@student.usp.ac.fj)");

        jTextArea1.setText("Bula vinaka\n\n"
                + "Thank you for using our Mini Search Engine. \nThis GUI program was designed in Eclipse IDE.\n"
                + "It is a Mini Search engine that searches for a \nunique ID if they are stored in first columns.\n"
                + "In the background, you can go to compile screen \nor console to see the CLI version.\n"
                + "To use the CLI version, you need to open \nthe CSV file from the GUI version and keep the\n"
                + "GUI window open, or else the whole program will stop.\n"
                + "The program only works with CSV files.\n"
                + "First columns will always be treated as ID\n"
                + "\nSequential Search uses a while loop, to iterate throughout\n"
                + "the lists, where the isFound condition breaks the loop \n"
                + "and stores the current incrementing counter value as the found location.\n"
                + "say like foundAt=i \n"
                + "\nBinary Search uses the builtin Collections.binarySearch() method\n"
                + "where the index returned by it is used to retrieve the found element\n"
                + "We test the returned index by negativeness or positiveness, where a\n"
                + "index value > -1 is reported as element found, whereas index <= -1 \n"
                + "means that the element is not  found. \n"
                + "\nBinary Search can only work on sorted lists. (SORTED Lists only) \n"
                + "\nIf your CSV file has unsorted ID's in first column, then our \n"
                + "program will use the builtin Collections.sort() method to sort \n"
                + "your CSV file according to first column data or ID's. A pre-sorted \n"
                + "CSV file will make binary search faster, whereas an unsorted one might\n"
                + "add more time since the sorting has to take place first within the\n"
                + "Binary Search process. \n"
                + "\nHashTable search uses the literal containsKey() method. If true, we\n"
                + "grab that element mapped to that search key and show\nits containing value as the search result.\n"
                + "\nThe 10% search works like this. It uses a random number to generate \n"
                + "a starting index (a01), creates an array of size 10% of CSV file's rows, then\n"
                + "add array.length to starting index to give you and ending index (a02). \n"
                + "This 10% array will store items from Lists.get(a01) all the way to Lists.get(a02).\n"
                + "Now the 10% array contains a lot of ID's. Now we search for these ID's\n"
                + "one by one, using a for-Loop of course.\n"
                + "\nOur discovery from the running of proteins.csv 10% search: \n"
                + "HashTable Search is the fastest, followed by ArrayList Binary Search,\nthen LinkedList Binary Search,"
                + "then ArrayList Sequential, \nand lastly the slowest being LinkedList Sequential Search\n"
                + "\n----------------------------------------------------\n"
                + "\nThis is a CS214 production. 2021, Semester 2 (Week 7)");
        
        jTextArea1.setEditable(false);
        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel3)
                    .addComponent(jLabel2)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 497, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(19, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(filler1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(filler1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(44, 44, 44)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(19, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>                        

    // Variables declaration - do not modify                     
    private javax.swing.Box.Filler filler1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    // End of variables declaration                   
}
